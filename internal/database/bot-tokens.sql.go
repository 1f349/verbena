// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: bot-tokens.sql

package database

import (
	"context"
)

const botTokenExists = `-- name: BotTokenExists :one
SELECT id, owner_id, zone_id
FROM bot_tokens
WHERE id = ?
`

func (q *Queries) BotTokenExists(ctx context.Context, id int64) (BotToken, error) {
	row := q.db.QueryRowContext(ctx, botTokenExists, id)
	var i BotToken
	err := row.Scan(&i.ID, &i.OwnerID, &i.ZoneID)
	return i, err
}

const registerBotToken = `-- name: RegisterBotToken :execlastid
INSERT INTO bot_tokens(owner_id, zone_id)
VALUES (?, ?)
`

type RegisterBotTokenParams struct {
	OwnerID int64 `json:"owner_id"`
	ZoneID  int64 `json:"zone_id"`
}

func (q *Queries) RegisterBotToken(ctx context.Context, arg RegisterBotTokenParams) (int64, error) {
	result, err := q.db.ExecContext(ctx, registerBotToken, arg.OwnerID, arg.ZoneID)
	if err != nil {
		return 0, err
	}
	return result.LastInsertId()
}
