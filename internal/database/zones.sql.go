// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: zones.sql

package database

import (
	"context"
)

const getActiveZones = `-- name: GetActiveZones :many
SELECT id, name, serial, active
FROM zones
WHERE active = 1
`

func (q *Queries) GetActiveZones(ctx context.Context) ([]Zone, error) {
	rows, err := q.db.QueryContext(ctx, getActiveZones)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Zone
	for rows.Next() {
		var i Zone
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Serial,
			&i.Active,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
